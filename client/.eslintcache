[{"C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\index.js":"1","C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\reportWebVitals.js":"2","C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\App.js":"3","C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\pages\\Home.js":"4","C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\pages\\Profile.js":"5","C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\pages\\Login.js":"6","C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\pages\\Signup.js":"7","C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\components\\Header\\index.js":"8","C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\components\\Footer\\index.js":"9","C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\utils\\queries.js":"10","C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\utils\\mutations.js":"11","C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\utils\\auth.js":"12","C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\components\\PostList\\index.js":"13","C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\components\\PostForm\\index.js":"14","C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\pages\\SinglePost.js":"15","C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\components\\CommentList\\index.js":"16","C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\components\\CommentForm\\index.js":"17","C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\components\\SearchBar\\index.js":"18"},{"size":517,"mtime":1660854639995,"results":"19","hashOfConfig":"20"},{"size":375,"mtime":1660854640008,"results":"21","hashOfConfig":"20"},{"size":2419,"mtime":1660989008727,"results":"22","hashOfConfig":"20"},{"size":1627,"mtime":1661119229195,"results":"23","hashOfConfig":"20"},{"size":1924,"mtime":1661197496790,"results":"24","hashOfConfig":"20"},{"size":2597,"mtime":1660854639997,"results":"25","hashOfConfig":"20"},{"size":2758,"mtime":1660854639999,"results":"26","hashOfConfig":"20"},{"size":1452,"mtime":1661112125940,"results":"27","hashOfConfig":"20"},{"size":876,"mtime":1660854639966,"results":"28","hashOfConfig":"20"},{"size":1347,"mtime":1661194268605,"results":"29","hashOfConfig":"20"},{"size":1845,"mtime":1661196288586,"results":"30","hashOfConfig":"20"},{"size":1084,"mtime":1660854640010,"results":"31","hashOfConfig":"20"},{"size":1564,"mtime":1661113587726,"results":"32","hashOfConfig":"20"},{"size":3108,"mtime":1660995648277,"results":"33","hashOfConfig":"20"},{"size":1565,"mtime":1660854640000,"results":"34","hashOfConfig":"20"},{"size":989,"mtime":1660854639963,"results":"35","hashOfConfig":"20"},{"size":2481,"mtime":1660854639960,"results":"36","hashOfConfig":"20"},{"size":1724,"mtime":1661119352329,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"h9948d",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},"C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\index.js",[],["79","80"],"C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\reportWebVitals.js",[],"C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\App.js",[],"C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\pages\\Home.js",["81","82","83"],"import React from 'react';\r\nimport { Navigate, useParams } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\n\r\nimport PostForm from '../components/PostForm';\r\nimport PostList from '../components/PostList';\r\n\r\nimport {QUERY_ME } from '../utils/queries';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst Home = () => {\r\n  // const { username: userParam } = useParams();\r\n\r\n  // const { loading, data } = useQuery(userParam ? QUERY_USER : QUERY_ME, {\r\n  //   variables: { username: userParam },\r\n  // });\r\n\r\n  \r\n  const { loading, data } = useQuery(QUERY_ME);\r\n\r\n  const user = data?.me || {};\r\n\r\n  // navigate to personal profile page if username is yours\r\n  // if (Auth.loggedIn() && Auth.getProfile().data.username === userParam) {\r\n  //   return <Navigate to=\"/me\" />;\r\n  // }\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (!user?.username) {\r\n    return (\r\n      <h4>\r\n        You need to be logged in to see this. Use the navigation links above to\r\n        sign up or log in!\r\n      </h4>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n       <PostForm />\r\n      <div className=\"flex-row justify-center mb-3\">\r\n        {/* <h2 className=\"col-12 col-md-10 bg-dark text-light p-3 mb-5\">\r\n          Viewing {userParam ? `${user.username}'s` : 'your'} profile.\r\n        </h2> */}\r\n\r\n        <div className=\"col-12 col-md-10 mb-5\">\r\n          <PostList\r\n            posts={user.posts}\r\n            title={`${user.username}'s posts...`}\r\n            showTitle={false}\r\n            showUsername={false}\r\n          />\r\n        </div>\r\n    \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\pages\\Profile.js",["84"],"C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\pages\\Login.js",[],"C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\pages\\Signup.js",[],"C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\components\\Header\\index.js",[],"C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\components\\Footer\\index.js",[],"C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\utils\\queries.js",[],"C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\utils\\mutations.js",[],"C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\utils\\auth.js",[],"C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\components\\PostList\\index.js",[],"C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\components\\PostForm\\index.js",["85"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\n\r\nimport { ADD_POST} from '../../utils/mutations';\r\nimport { QUERY_POSTS, QUERY_ME } from '../../utils/queries';\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nconst PostForm = () => {\r\n  const [postText, setPostText] = useState('');\r\n\r\n  const [characterCount, setCharacterCount] = useState(0);\r\n\r\n  const [addPost, { error }] = useMutation(ADD_POST, {\r\n    update(cache, { data: { addPost} }) {\r\n      try {\r\n        const { posts } = cache.readQuery({ query: QUERY_POSTS });\r\n\r\n        cache.writeQuery({\r\n          query: QUERY_POSTS,\r\n          data: { posts: [addPost, ...posts] },\r\n        });\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n\r\n      // update me object's cache\r\n      const { me } = cache.readQuery({ query: QUERY_ME });\r\n      cache.writeQuery({\r\n        query: QUERY_ME,\r\n        data: { me: { ...me, posts: [...me.posts, addPost] } },\r\n      });\r\n    },\r\n  });\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const { data } = await addPost({\r\n        variables: {\r\n          postText,\r\n          postAuthor: Auth.getProfile().data.username,\r\n        },\r\n\r\n      });\r\n\r\n      setPostText('');\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === 'postText' && value.length <= 280) {\r\n      setPostText(value);\r\n      setCharacterCount(value.length);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>What's on your techy mind?</h3>\r\n\r\n      {Auth.loggedIn() ? (\r\n        <>\r\n          <p\r\n            className={`m-0 ${\r\n              characterCount === 280 || error ? 'text-danger' : ''\r\n            }`}\r\n          >\r\n            Character Count: {characterCount}/280\r\n          </p>\r\n          <form\r\n            className=\"flex-row justify-center justify-space-between-md align-center\"\r\n            onSubmit={handleFormSubmit}\r\n          >\r\n            <div className=\"col-12 col-lg-9\">\r\n              <textarea\r\n                name=\"postText\"\r\n                placeholder=\"Here's a new post...\"\r\n                value={postText}\r\n                className=\"form-input w-100\"\r\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\r\n                onChange={handleChange}\r\n              ></textarea>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-lg-3\">\r\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\r\n                Add Post\r\n              </button>\r\n            </div>\r\n            {error && (\r\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\r\n                {error.message}\r\n              </div>\r\n            )}\r\n          </form>\r\n        </>\r\n      ) : (\r\n        <p>\r\n          You need to be logged in order to make a post . Please{' '}\r\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n","C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\pages\\SinglePost.js",[],"C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\components\\CommentList\\index.js",[],"C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\components\\CommentForm\\index.js",["86"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\n\r\nimport { ADD_COMMENT } from '../../utils/mutations';\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nconst CommentForm = ({ postId }) => {\r\n  const [commentText, setCommentText] = useState('');\r\n  const [characterCount, setCharacterCount] = useState(0);\r\n\r\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const { data } = await addComment({\r\n        variables: {\r\n          postId,\r\n          commentText,\r\n          commentAuthor: Auth.getProfile().data.username,\r\n        },\r\n      });\r\n\r\n      setCommentText('');\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === 'commentText' && value.length <= 280) {\r\n      setCommentText(value);\r\n      setCharacterCount(value.length);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h4>What are your thoughts on this post?</h4>\r\n\r\n      {Auth.loggedIn() ? (\r\n        <>\r\n          <p\r\n            className={`m-0 ${\r\n              characterCount === 280 || error ? 'text-danger' : ''\r\n            }`}\r\n          >\r\n            Character Count: {characterCount}/280\r\n            {error && <span className=\"ml-2\">{error.message}</span>}\r\n          </p>\r\n          <form\r\n            className=\"flex-row justify-center justify-space-between-md align-center\"\r\n            onSubmit={handleFormSubmit}\r\n          >\r\n            <div className=\"col-12 col-lg-9\">\r\n              <textarea\r\n                name=\"commentText\"\r\n                placeholder=\"Add your comment...\"\r\n                value={commentText}\r\n                className=\"form-input w-100\"\r\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\r\n                onChange={handleChange}\r\n              ></textarea>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-lg-3\">\r\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\r\n                Add Comment\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </>\r\n      ) : (\r\n        <p>\r\n          You need to be logged in torder to post. Please{' '}\r\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentForm;\r\n","C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\components\\SearchBar\\index.js",["87"],"import React, { useState } from 'react';\r\nimport { QUERY_ALL_USER } from '../../utils/queries';\r\nimport { useQuery } from '@apollo/client';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../styles/searchbar.css';\r\n\r\nconst SearchBar = () =>{\r\n\r\n    const { loading, data } = useQuery(QUERY_ALL_USER)\r\n    const users = data?.users || [];\r\n    const [filteredData, setFilteredData]= useState([])\r\n    \r\n    const handleFilter = (event) => {\r\n        const searchWord = event.target.value\r\n        const newFilter = users.filter((value)=> {\r\n            return value.username.toLowerCase().includes(searchWord.toLowerCase());\r\n        });\r\n\r\n        if(searchWord === \"\"){\r\n            setFilteredData([])\r\n        }else{\r\n            setFilteredData(newFilter)\r\n        }\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className='search'>\r\n            <div className='searchInputs'>\r\n                <input type=\"text\" placeholder=\"search for friend\" onChange={handleFilter} />\r\n                <div className= \"searchIcon\" >     \r\n                    <SearchIcon />\r\n                </div>\r\n            </div>\r\n                {filteredData.length !== 0 && (\r\n                    <div className='dataResult'>\r\n                        {filteredData.slice(0, 15).map((value, key) => {           \r\n                            return (\r\n                                <Link className=\"dataItem\" to={`/profiles/${value.username}` }>\r\n                        <p>{value.username}</p>\r\n                        </Link>\r\n                        )\r\n                        })}\r\n                    </div>\r\n                )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar",{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":2,"column":10,"nodeType":"94","messageId":"95","endLine":2,"endColumn":18},{"ruleId":"92","severity":1,"message":"96","line":2,"column":20,"nodeType":"94","messageId":"95","endLine":2,"endColumn":29},{"ruleId":"92","severity":1,"message":"97","line":10,"column":8,"nodeType":"94","messageId":"95","endLine":10,"endColumn":12},{"ruleId":"92","severity":1,"message":"98","line":19,"column":23,"nodeType":"94","messageId":"95","endLine":19,"endColumn":28},{"ruleId":"92","severity":1,"message":"99","line":41,"column":15,"nodeType":"94","messageId":"95","endLine":41,"endColumn":19},{"ruleId":"92","severity":1,"message":"99","line":19,"column":15,"nodeType":"94","messageId":"95","endLine":19,"endColumn":19},{"ruleId":"92","severity":1,"message":"100","line":10,"column":13,"nodeType":"94","messageId":"95","endLine":10,"endColumn":20},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","'useParams' is defined but never used.","'Auth' is defined but never used.","'error' is assigned a value but never used.","'data' is assigned a value but never used.","'loading' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]