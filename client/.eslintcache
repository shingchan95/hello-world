[{"C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\index.js":"1","C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\reportWebVitals.js":"2","C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\App.js":"3","C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\pages\\Home.js":"4","C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\pages\\Profile.js":"5","C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\pages\\Login.js":"6","C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\pages\\Signup.js":"7","C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\components\\Header\\index.js":"8","C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\components\\Footer\\index.js":"9","C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\utils\\queries.js":"10","C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\utils\\mutations.js":"11","C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\utils\\auth.js":"12","C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\components\\PostList\\index.js":"13","C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\components\\PostForm\\index.js":"14","C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\pages\\SinglePost.js":"15","C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\components\\CommentList\\index.js":"16","C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\components\\CommentForm\\index.js":"17"},{"size":517,"mtime":1660854639995,"results":"18","hashOfConfig":"19"},{"size":375,"mtime":1660854640008,"results":"20","hashOfConfig":"19"},{"size":2419,"mtime":1660989008727,"results":"21","hashOfConfig":"19"},{"size":1783,"mtime":1661087031755,"results":"22","hashOfConfig":"19"},{"size":1802,"mtime":1660999934604,"results":"23","hashOfConfig":"19"},{"size":2597,"mtime":1660854639997,"results":"24","hashOfConfig":"19"},{"size":2758,"mtime":1660854639999,"results":"25","hashOfConfig":"19"},{"size":1331,"mtime":1660854639985,"results":"26","hashOfConfig":"19"},{"size":876,"mtime":1660854639966,"results":"27","hashOfConfig":"19"},{"size":1178,"mtime":1661086998335,"results":"28","hashOfConfig":"19"},{"size":1669,"mtime":1660991135788,"results":"29","hashOfConfig":"19"},{"size":1084,"mtime":1660854640010,"results":"30","hashOfConfig":"19"},{"size":1582,"mtime":1661026096730,"results":"31","hashOfConfig":"19"},{"size":3108,"mtime":1660995648277,"results":"32","hashOfConfig":"19"},{"size":1565,"mtime":1660854640000,"results":"33","hashOfConfig":"19"},{"size":989,"mtime":1660854639963,"results":"34","hashOfConfig":"19"},{"size":2481,"mtime":1660854639960,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"h9948d",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"38"},"C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\index.js",[],["74","75"],"C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\reportWebVitals.js",[],"C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\App.js",[],"C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\pages\\Home.js",[],"C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\pages\\Profile.js",["76","77"],"import React from 'react';\r\nimport { Navigate, useParams } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\n\r\nimport PostForm from '../components/PostForm';\r\nimport PostList from '../components/PostList';\r\n\r\nimport { QUERY_USER, QUERY_ME } from '../utils/queries';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst Profile = () => {\r\n  const { username: userParam } = useParams();\r\n\r\n  const { loading, data } = useQuery(userParam ? QUERY_USER : QUERY_ME, {\r\n    variables: { username: userParam },\r\n  });\r\n\r\n  const user = data?.me || data?.user || {};\r\n\r\n\r\n  // navigate to personal profile page if username is yours\r\n  if (Auth.loggedIn() && Auth.getProfile().data.username === userParam) {\r\n    return <Navigate to=\"/me\" />;\r\n  }\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (!user?.username) {\r\n    return (\r\n      <h4>\r\n        You need to be logged in to see this. Use the navigation links above to\r\n        sign up or log in!\r\n      </h4>\r\n    );\r\n  }\r\n\r\n  return (\r\n    // <div>\r\n    //    <PostForm />\r\n    //   <div className=\"flex-row justify-center mb-3\">\r\n        <h2 className=\"col-12 col-md-10 bg-dark text-light p-3 mb-5\">\r\n          {`${user.username}'s`} profile.\r\n        </h2> \r\n\r\n    //     {/* <div className=\"col-12 col-md-10 mb-5\">\r\n    //       <PostList\r\n    //         posts={user.posts}\r\n    //         title={`${user.username}'s posts...`}\r\n    //         showTitle={false}\r\n    //         showUsername={false}\r\n    //       />\r\n    //     </div>\r\n    //     {!userParam && (\r\n    //       <div\r\n    //         className=\"col-12 col-md-10 mb-3 p-3\"\r\n    //         style={{ border: '1px dotted #1a1a1a' }}\r\n    //       >\r\n    //       </div>\r\n    //     )}\r\n    //   </div>\r\n    // </div> */}\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\pages\\Login.js",[],"C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\pages\\Signup.js",[],"C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\components\\Header\\index.js",[],"C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\components\\Footer\\index.js",[],"C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\utils\\queries.js",[],"C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\utils\\mutations.js",[],"C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\utils\\auth.js",[],"C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\components\\PostList\\index.js",[],"C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\components\\PostForm\\index.js",["78"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\n\r\nimport { ADD_POST} from '../../utils/mutations';\r\nimport { QUERY_POSTS, QUERY_ME } from '../../utils/queries';\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nconst PostForm = () => {\r\n  const [postText, setPostText] = useState('');\r\n\r\n  const [characterCount, setCharacterCount] = useState(0);\r\n\r\n  const [addPost, { error }] = useMutation(ADD_POST, {\r\n    update(cache, { data: { addPost} }) {\r\n      try {\r\n        const { posts } = cache.readQuery({ query: QUERY_POSTS });\r\n\r\n        cache.writeQuery({\r\n          query: QUERY_POSTS,\r\n          data: { posts: [addPost, ...posts] },\r\n        });\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n\r\n      // update me object's cache\r\n      const { me } = cache.readQuery({ query: QUERY_ME });\r\n      cache.writeQuery({\r\n        query: QUERY_ME,\r\n        data: { me: { ...me, posts: [...me.posts, addPost] } },\r\n      });\r\n    },\r\n  });\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const { data } = await addPost({\r\n        variables: {\r\n          postText,\r\n          postAuthor: Auth.getProfile().data.username,\r\n        },\r\n\r\n      });\r\n\r\n      setPostText('');\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === 'postText' && value.length <= 280) {\r\n      setPostText(value);\r\n      setCharacterCount(value.length);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>What's on your techy mind?</h3>\r\n\r\n      {Auth.loggedIn() ? (\r\n        <>\r\n          <p\r\n            className={`m-0 ${\r\n              characterCount === 280 || error ? 'text-danger' : ''\r\n            }`}\r\n          >\r\n            Character Count: {characterCount}/280\r\n          </p>\r\n          <form\r\n            className=\"flex-row justify-center justify-space-between-md align-center\"\r\n            onSubmit={handleFormSubmit}\r\n          >\r\n            <div className=\"col-12 col-lg-9\">\r\n              <textarea\r\n                name=\"postText\"\r\n                placeholder=\"Here's a new post...\"\r\n                value={postText}\r\n                className=\"form-input w-100\"\r\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\r\n                onChange={handleChange}\r\n              ></textarea>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-lg-3\">\r\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\r\n                Add Post\r\n              </button>\r\n            </div>\r\n            {error && (\r\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\r\n                {error.message}\r\n              </div>\r\n            )}\r\n          </form>\r\n        </>\r\n      ) : (\r\n        <p>\r\n          You need to be logged in order to make a post . Please{' '}\r\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n","C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\pages\\SinglePost.js",[],"C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\components\\CommentList\\index.js",[],"C:\\Users\\OWNER\\coding_bootcamp\\student\\hello-world\\client\\src\\components\\CommentForm\\index.js",["79"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\n\r\nimport { ADD_COMMENT } from '../../utils/mutations';\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nconst CommentForm = ({ postId }) => {\r\n  const [commentText, setCommentText] = useState('');\r\n  const [characterCount, setCharacterCount] = useState(0);\r\n\r\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const { data } = await addComment({\r\n        variables: {\r\n          postId,\r\n          commentText,\r\n          commentAuthor: Auth.getProfile().data.username,\r\n        },\r\n      });\r\n\r\n      setCommentText('');\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === 'commentText' && value.length <= 280) {\r\n      setCommentText(value);\r\n      setCharacterCount(value.length);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h4>What are your thoughts on this post?</h4>\r\n\r\n      {Auth.loggedIn() ? (\r\n        <>\r\n          <p\r\n            className={`m-0 ${\r\n              characterCount === 280 || error ? 'text-danger' : ''\r\n            }`}\r\n          >\r\n            Character Count: {characterCount}/280\r\n            {error && <span className=\"ml-2\">{error.message}</span>}\r\n          </p>\r\n          <form\r\n            className=\"flex-row justify-center justify-space-between-md align-center\"\r\n            onSubmit={handleFormSubmit}\r\n          >\r\n            <div className=\"col-12 col-lg-9\">\r\n              <textarea\r\n                name=\"commentText\"\r\n                placeholder=\"Add your comment...\"\r\n                value={commentText}\r\n                className=\"form-input w-100\"\r\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\r\n                onChange={handleChange}\r\n              ></textarea>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-lg-3\">\r\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\r\n                Add Comment\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </>\r\n      ) : (\r\n        <p>\r\n          You need to be logged in torder to post. Please{' '}\r\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentForm;\r\n",{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":5,"column":8,"nodeType":"86","messageId":"87","endLine":5,"endColumn":16},{"ruleId":"84","severity":1,"message":"88","line":6,"column":8,"nodeType":"86","messageId":"87","endLine":6,"endColumn":16},{"ruleId":"84","severity":1,"message":"89","line":41,"column":15,"nodeType":"86","messageId":"87","endLine":41,"endColumn":19},{"ruleId":"84","severity":1,"message":"89","line":19,"column":15,"nodeType":"86","messageId":"87","endLine":19,"endColumn":19},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'PostForm' is defined but never used.","Identifier","unusedVar","'PostList' is defined but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]